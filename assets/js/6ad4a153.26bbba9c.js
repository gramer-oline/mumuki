"use strict";(self.webpackChunkmumuky=self.webpackChunkmumuky||[]).push([[6922],{3905:(e,r,a)=>{a.d(r,{Zo:()=>u,kt:()=>d});var t=a(7294);function n(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function o(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),a.push.apply(a,t)}return a}function c(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?o(Object(a),!0).forEach((function(r){n(e,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))}))}return e}function i(e,r){if(null==e)return{};var a,t,n=function(e,r){if(null==e)return{};var a,t,n={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],r.indexOf(a)>=0||(n[a]=e[a]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=t.createContext({}),l=function(e){var r=t.useContext(s),a=r;return e&&(a="function"==typeof e?e(r):c(c({},r),e)),a},u=function(e){var r=l(e.components);return t.createElement(s.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=l(a),d=n,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||o;return a?t.createElement(f,c(c({ref:r},u),{},{components:a})):t.createElement(f,c({ref:r},u))}));function d(e,r){var a=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=a.length,c=new Array(o);c[0]=m;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,c[1]=i;for(var l=2;l<o;l++)c[l]=a[l];return t.createElement.apply(null,c)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},1660:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var t=a(7462),n=(a(7294),a(3905));const o={},c="Ejercicio 3: La fila roja",i={unversionedId:"1 Fundamentos/Practica primeros programas /Ejercicio 3 La fila roja 07ad6af5cd364de891182f2fa237a86a",id:"1 Fundamentos/Practica primeros programas /Ejercicio 3 La fila roja 07ad6af5cd364de891182f2fa237a86a",title:"Ejercicio 3: La fila roja",description:"Created26 PM",source:"@site/docs/1 Fundamentos/Practica primeros programas /Ejercicio 3 La fila roja 07ad6af5cd364de891182f2fa237a86a.md",sourceDirName:"1 Fundamentos/Practica primeros programas ",slug:"/1 Fundamentos/Practica primeros programas /Ejercicio 3 La fila roja 07ad6af5cd364de891182f2fa237a86a",permalink:"/mumuki/1 Fundamentos/Practica primeros programas /Ejercicio 3 La fila roja 07ad6af5cd364de891182f2fa237a86a",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/1 Fundamentos/Practica primeros programas /Ejercicio 3 La fila roja 07ad6af5cd364de891182f2fa237a86a.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Ejercicio 2: Combinando comandos",permalink:"/mumuki/1 Fundamentos/Practica primeros programas /Ejercicio 2 Combinando comandos bc4c103a14f54b81b9c50a5fdddc9ddf"},next:{title:"Ejercicio 4: Una escalerita",permalink:"/mumuki/1 Fundamentos/Practica primeros programas /Ejercicio 4 Una escalerita c9bbd547b3e44034a96738d880bbbbb5"}},s={},l=[],u={toc:l};function p(e){let{components:r,...a}=e;return(0,n.kt)("wrapper",(0,t.Z)({},u,a,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"ejercicio-3-la-fila-roja"},"Ejercicio 3: La fila roja"),(0,n.kt)("p",null,"Created: July 3, 2022 3:26 PM"),(0,n.kt)("p",null,"Cre\xe1 un programa que a partir de un tablero vac\xedo con el cabezal en el origen, dibuje una linea de cuatro celdas\xa0",(0,n.kt)("strong",{parentName:"p"},"hacia el Este"),"\n. Las bolitas deben ser rojas y debe poner una bolita por celda."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-jsx"},"\nprogram{\n  Poner(Rojo)\n  Mover(Este)\n  Poner(Rojo)\n  Mover(Este)\n  \n  Poner(Rojo)\n  Mover(Este)\n  \n  Poner(Rojo)\n  \n}\n")))}p.isMDXComponent=!0}}]);